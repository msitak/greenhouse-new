generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Listing {
  id                    String         @id @default(cuid())
  asariId               Int            @unique
  slug                  String         @unique
  exportId              String?
  statusId              Int?
  title                 String?
  description           String?
  privateDescription    String?
  englishDescription    String?
  internalComment       String?
  price                 Float?
  priceCurrencyId       Int?
  pricePerM2            Float?
  locationAddress       String?
  locationCity          String?
  locationDistrict      String?
  locationStreet        String?
  locationStreetNumber  String?
  locationFlatNumber    String?
  locationPostalCode    String?
  locationCountryId     Int?
  latitude              Float?
  longitude             Float?
  locationVoivodeship   String?
  locationCounty        String?
  locationCommunity     String?
  propertyTypeId        Int?
  area                  Float?
  roomsCount            Int?
  floor                 Int?
  floorCount            Int?
  buildYear             Int?
  buildingMaterialId    Int?
  windowTypeId          Int?
  heatingTypeId         Int?
  marketTypeId          Int?
  propertyDetailsJson   Json?
  agentAsariId          Int?
  agentName             String?
  agentSurname          String?
  agentPhone            String?
  agentEmail            String?
  agentSkypeUser        String?
  agentImageAsariId     Int?
  parentListingAsariId  String?
  createdAtSystem       DateTime?
  updatedAtSystem       DateTime?
  additionalDetailsJson Json?
  dbCreatedAt           DateTime       @default(now())
  dbUpdatedAt           DateTime       @updatedAt
  lastUpdatedAsari      DateTime?
  offerType             String?
  virtualTourUrl        String?
  asariStatus           AsariStatus    @default(Draft)
  isVisible             Boolean        @default(true)
  soldAt                DateTime?
  images                ListingImage[]

  @@index([asariId])
  @@index([locationCity])
  @@index([propertyTypeId])
  @@index([price])
  @@index([area])
  @@index([asariStatus])
  @@index([slug])
}

model ListingImage {
  id           String   @id @default(cuid())
  asariId      Int      @unique
  urlThumbnail String
  urlNormal    String
  urlOriginal  String?
  description  String?
  order        Int?
  isScheme     Boolean  @default(false)
  listingId    String
  dbCreatedAt  DateTime @default(now())
  dbUpdatedAt  DateTime @updatedAt
  listing      Listing  @relation(fields: [listingId], references: [id], onDelete: Cascade)

  @@index([asariId])
}

model DictionaryValue {
  id            String @id @default(cuid())
  dictionaryKey String
  asariDictId   Int
  locale        String
  value         String

  @@unique([dictionaryKey, asariDictId, locale])
  @@index([dictionaryKey, locale])
}

model I18nMessage {
  id     String @id @default(cuid())
  locale String
  key    String
  value  String

  @@unique([locale, key])
  @@index([locale])
}

enum AsariStatus {
  Active
  Cancelled
  Closed
  Pending
  Draft
  Archived
  Unknown
}
